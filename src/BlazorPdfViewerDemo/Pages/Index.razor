@page "/"
@inject IFileService _fileService

<InputFile OnChange="HandleFileSelected" />

<table class="table table-bordered" style="margin-top:10px">
	<thead>
		<tr>
			<th>SL</th>
			<th>PDF Name</th>
			<th>Action</th>
		</tr>
	</thead>
	<tbody>
		@if (_fileClass.Files is not null && _fileClass.Files.Count > 0) foreach (var file in _fileClass.Files)
		{
			<tr>
				<td>@file.FileId</td>
				<td>@file.Name</td>
				<td>
					<button class="btn btn-primary" @onclick="(e => ShowOnCurrentPage(file.FileId))">Current Page</button>
					<a class="btn btn-primary" href="files/@file.Name" target="_blank">New Tab</a>
				</td>
			</tr>
		}
	</tbody>
</table>

@if (!string.IsNullOrWhiteSpace(_pdfName))
{
	<iframe src="/files/@_pdfName" style="width:100%;height:1200px;"></iframe>
}

@code {

	private FileClass _fileClass = new();
	private string _pdfName = "";

	protected override void OnInitialized() =>
		_fileClass.Files = _fileService.GetAllPDFs();

	private async Task HandleFileSelected(InputFileChangeEventArgs e)
	{
		if (e.File is not null)
			await _fileService.Upload(e.File);
		_fileClass.Files = _fileService.GetAllPDFs();
	}

	private void ShowOnCurrentPage(int fileId) =>
		_pdfName = (_fileClass.Files.FirstOrDefault(x => x.FileId == fileId) ?? new()).Name;

}
